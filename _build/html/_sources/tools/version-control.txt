版本控制
===========

.. contents:: 目录

基本流程
-----------

a. 创建远程仓库
b. checkout 创建本地仓库（git为clone）
c. add 将代码加入本地仓库
d. commit 提交代码 **（svn提交至远程仓库；git提交至本地仓库（之后push提交至远程仓库））**

注：git与svn的区别在于：git的本地仓库是远程仓库的克隆，而svn的本地仓库可以只有远程仓库的部分代码

使项目中的某些文件不被Git追踪
-------------------------------
1. 在本地仓库添加.gitignore文件可以匹配之后添加的文件，使其不被追踪
2. 对于已经被追踪的文件，使用下面的命令使其不被追踪

.. code-block:: shell

    $ git rm --cached README

Git中的文件的三种状态
----------------------
- 已修改（modified）：位于工作区。
- 已暂存（staged）：位于暂存区。对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中
- 已提交（committed）：位于本地仓库。

    - 注：工作区、暂存区和本地仓库都是逻辑意义上的划分，其在物理上通过对文件标记实现
    - 注：每次提交更新或保存项目状态时，git会对当时的全部文件制作一个 **快照** 并保存这个快照的索引

.. image:: ../.img/git.JPG
